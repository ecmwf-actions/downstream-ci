atlas:
  type: cmake
  downstream-ci-hpc:
    modules:
      - fftw
      - qhull
  deps:
    - eckit
    - fckit
    
atlas-orca:
  type: cmake
  master_branch: master
  develop_branch: develop
  deps:
    - atlas

cfgrib:
  type: python
  master_branch: master
  develop_branch: master
  requirements_path: ci/requirements-tests.in
  deps:
    - eccodes-python

earthkit:
  type: python
  master_branch: main
  requirements_path: tests/downstream-ci-requirements.txt
  downstream-ci:
    test_cmd: |
      _EKD_DIR=$(pwd) && cd .. && python -m pytest ${_EKD_DIR} -vv --cov=. --cov-report=html && cd -
  deps:
    - earthkit-data
    - earthkit-geo
    - earthkit-meteo
    - earthkit-regrid

earthkit-data:
  type: python
  master_branch: main
  toml_opt_dep_sections: all,test,ci
  deps:
    - cfgrib
    - multiurl
    - pdbufr
    - pyodc
  downstream-ci:
    test_cmd: |
      python -m pytest -vv -m 'not notebook and not no_cache_init' --cov=. --cov-report=xml
      python -m pytest -v -m 'notebook'
      python -m pytest --forked -vv -m 'no_cache_init'
      python -m coverage report

earthkit-geo:
  type: python
  master_branch: main
  requirements_path: tests/downstream-ci-requirements.txt
  downstream-ci:
    config_path: ""

earthkit-meteo:
  type: python
  master_branch: main
  requirements_path: tests/downstream-ci-requirements.txt
  downstream-ci:
    config_path: ""

earthkit-regrid:
  type: python
  master_branch: main
  requirements_path: tests/downstream-ci-requirements.txt
  downstream-ci:
    config_path: ""

earthkit-time:
  type: python
  master_branch: main
  downstream-ci:
    config_path: ""
    test_cmd: |
      python -m pytest --cov=./ --cov-report=xml
      python -m coverage report

ecbuild:
  type: cmake
  input: false

eccodes:
  type: cmake
  downstream-ci-hpc:
    modules:
      - aec
    deps:
      - ecbuild
  downstream-ci:
    deps:
      - libaec
      - ecbuild

eccodes-python:
  type: python
  deps:
    - eccodes

ecflow:
  type: cmake
  build-package-python: "3.10"
  deps:
    - ecbuild

ecflow-light:
  type: cmake
  deps:
    - eckit

eckit:
  type: cmake
  deps:
    - ecbuild

ecmwf-toolbox:
  type: cmake
  private: true

fckit:
  type: cmake
  deps:
    - eckit

fdb:
  type: cmake
  deps:
    - metkit

findlibs:
  type: python
  master_branch: master
  requirements_path: tests/downstream-ci-requirements.txt
  downstream-ci:
    config_path: ""

infero:
  type: cmake
  master_branch: master
  develop_branch: develop
  deps:
    - eckit
    - fckit

kronos:
  type: cmake
  deps:
    - ecbuild

libaec:
  type: cmake
  input: false
  deps:
    - ecbuild

metkit:
  type: cmake
  deps:
    - eccodes
    - eckit

mir:
  type: cmake
  deps:
    - eckit
    - atlas
    - eccodes

multio:
  type: cmake
  master_branch: master
  develop_branch: develop
  env:
    CTEST_PARALLEL_LEVEL: 1
  deps:
    - atlas
    - atlas-orca
    - eccodes
    - eckit
    - fckit
    - fdb
    - metkit
    - mir
    
multio-python:
  type: python
  master_branch: main
  develop_branch: develop
  deps:
    - multio

multiurl:
  type: python
  master_branch: main
  develop_branch: main
  downstream-ci:
    config_path: ""

odc:
  type: cmake
  deps:
    - eckit

pdbufr:
  type: python
  master_branch: master
  requirements_path: tests/downstream-ci-requirements.txt
  downstream-ci:
    test_cmd: |
      python -m pytest --cov=./ --cov-report=xml -k 'not test_notebooks'
      python -m pytest -v -k 'test_notebooks'
  deps:
    - eccodes-python

pgen:
  type: cmake
  private: true
  deps:
    - mir
    - metkit

pgen-bundle:
  type: cmake
  private: true

plume:
  type: cmake
  deps:
    - eckit
    - atlas
    - fckit

pyfdb:
  type: python
  deps:
    - fdb
  downstream-ci:
    env:
      FDB5_CONFIG: >
        {"type":"local","engine":"toc","schema":"${{ github.workspace }}/tests/default_fdb_schema","spaces":[{"handler":"Default","roots":[{"path":"${{ github.workspace }}/data/fdb"}]}]}
    mkdir:
      - data/fdb
pyodc:
  type: python
  deps:
    - odc

skinnywms:
  type: python
  downstream-ci:
    config_path: ""

thermofeel:
  type: python
  downstream-ci:
    config_path: ""

troika:
  type: python
  downstream-ci:
    config_path: ""
    test_cmd: |
      pytest --cov=./ --cov-report=xml --basetemp=$RUNNER_TEMP/pytest_tmp
      python -m coverage report

cascade:
  type: python
  master_branch: main
  downstream-ci:
    config_path: ""

name: downstream ci

on:
  workflow_call:
    inputs:
      skip_matrix_jobs:
        description: List of matrix jobs to be skipped.
        required: false
        type: string
      eccodes:
        required: false
        type: string
      eccodes-python:
        required: false
        type: string
      eckit:
        required: false
        type: string
      metkit:
        required: false
        type: string
      atlas:
        required: false
        type: string
      mir:
        required: false
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      eccodes: ${{ steps.setup.outputs.eccodes }}
      eccodes-python: ${{ steps.setup.outputs.eccodes-python }}
      eckit: ${{ steps.setup.outputs.eckit }}
      metkit: ${{ steps.setup.outputs.metkit }}
      atlas: ${{ steps.setup.outputs.atlas }}
      mir: ${{ steps.setup.outputs.mir }}
    steps:
      - name: checkout reusable wfs repo
        uses: actions/checkout@v3
        with:
          repository: 'ecmwf-actions/downstream-ci'
          ref: 'main'

      - name: Run setup script
        id: setup
        env:
          TOKEN: ${{ secrets.GH_REPO_READ_TOKEN }}
          CONFIG: |
            ${{ inputs.eccodes || 'ecmwf/eccodes@develop' }}:
              path: .github/ci-config.yml
            ${{ inputs.eccodes-python || 'ecmwf/eccodes-python@develop' }}:
              path: .github/ci-config.yml
              python: true
            ${{ inputs.eckit || 'ecmwf/eckit@develop' }}:
              path: .github/ci-config.yml
            ${{ inputs.metkit || 'ecmwf/metkit@develop' }}:
              path: .github/ci-config.yml
            ${{ inputs.atlas || 'ecmwf/atlas@develop' }}:
              path: .github/ci-config.yml
            ${{ inputs.mir || 'ecmwf/mir@develop' }}:
              path: .github/ci-config.yml
          PYTHON_VERSIONS: |
            - "3.10"
          MATRIX: |
            name:
            - gnu@debian-11
            - gnu@centos-7.9
            - gnu@rocky-8.6
            - clang@rocky-8.6
            - gnu@ubuntu-22.04
            - gnu@fedora-37
            include:
            - name: gnu@debian-11
              labels: [self-hosted, platform-builder-debian-11]
              os: debian-11
              compiler: gnu
              compiler_cc: gcc
              compiler_cxx: g++
              compiler_fc: gfortran
            - name: gnu@centos-7.9
              labels: [self-hosted, platform-builder-centos-7.9]
              os: centos-7.9
              compiler: gnu
              compiler_cc: gcc
              compiler_cxx: g++
              compiler_fc: gfortran
            - name: gnu@rocky-8.6
              labels: [self-hosted, platform-builder-rocky-8.6]
              os: rocky-8.6
              compiler: gnu
              compiler_cc: gcc
              compiler_cxx: g++
              compiler_fc: gfortran
            - name: clang@rocky-8.6
              labels: [self-hosted, platform-builder-rocky-8.6]
              os: rocky-8.6
              compiler: clang
              compiler_cc: clang
              compiler_cxx: clang++
              compiler_fc: gfortran
            - name: gnu@ubuntu-22.04
              labels: [self-hosted, platform-builder-ubuntu-22.04]
              os: ubuntu-22.04
              compiler: gnu
              compiler_cc: gcc
              compiler_cxx: g++
              compiler_fc: gfortran
            - name: gnu@fedora-37
              labels: [self-hosted, platform-builder-fedora-37]
              os: fedora-37
              compiler: gnu
              compiler_cc: gcc
              compiler_cxx: g++
              compiler_fc: gfortran
        run: python setup_downstream_ci.py

  eccodes:
    name: eccodes
    needs: [setup]
    if: ${{ inputs.eccodes }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.eccodes) }}
    runs-on: ${{ matrix.labels }}
    steps:
      - uses: ecmwf-actions/reusable-workflows/build-package-with-config@v2
        with:
          repository: ${{ inputs.eccodes || 'ecmwf/eccodes@develop' }}
          build_package_inputs: |
            repository: ${{ inputs.eccodes || 'ecmwf/eccodes@develop' }}
          build_config: .github/ci-config.yml

  eccodes-python:
    name: eccodes-python
    needs: [setup, eccodes]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') && (inputs.eccodes || inputs.eccodes-python) }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.eccodes-python) }}
    runs-on: ${{ matrix.labels }}
    steps:
      - name: Build dependencies
        id: build-deps
        uses: ecmwf-actions/reusable-workflows/build-package-with-config@v2
        with:
          repository: ${{ inputs.eccodes-python || 'ecmwf/eccodes-python@develop' }}
          build_package_inputs: |
            repository: ${{ inputs.eccodes-python || 'ecmwf/eccodes-python@develop' }}
          build_config: .github/ci-config.yml
          build_dependencies: |
            ${{ inputs.eccodes }}

      - uses: ecmwf-actions/reusable-workflows/ci-python@v2
        with:
          lib_path: ${{ steps.build-deps.outputs.lib_path }}

  eckit:
    name: eckit
    needs: [setup]
    if: ${{ inputs.eckit }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.eckit) }}
    runs-on: ${{ matrix.labels }}
    steps:
      - uses: ecmwf-actions/reusable-workflows/build-package-with-config@v2
        with:
          repository: ${{ inputs.eckit || 'ecmwf/eckit@develop' }}
          build_package_inputs: |
            repository: ${{ inputs.eckit || 'ecmwf/eckit@develop' }}
          build_config: .github/ci-config.yml

  metkit:
    name: metkit
    needs: [setup, eckit, eccodes]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') && (inputs.eckit || inputs.eccodes || inputs.metkit) }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.metkit) }}
    runs-on: ${{ matrix.labels }}
    steps:
      - uses: ecmwf-actions/reusable-workflows/build-package-with-config@v2
        with:
          repository: ${{ inputs.metkit || 'ecmwf/metkit@develop' }}
          build_package_inputs: |
            repository: ${{ inputs.metkit || 'ecmwf/metkit@develop' }}
          build_config: .github/ci-config.yml
          build_dependencies: |
            ${{ inputs.eccodes }}
            ${{ inputs.eckit }}

  atlas:
    name: atlas
    needs: [setup, eckit]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') && (inputs.eckit || inputs.atlas) }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.atlas) }}
    runs-on: ${{ matrix.labels }}
    steps:
      - uses: ecmwf-actions/reusable-workflows/build-package-with-config@v2
        with:
          repository: ${{ inputs.atlas || 'ecmwf/atlas@develop' }}
          build_package_inputs: |
            repository: ${{ inputs.atlas || 'ecmwf/atlas@develop' }}
          build_config: .github/ci-config.yml
          build_dependencies: |
            ${{ inputs.eckit }}

  mir:
    name: mir
    needs: [setup, eckit, eccodes, atlas]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') && (inputs.eckit || inputs.eccodes || inputs.atlas || inputs.mir) }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.mir) }}
    runs-on: ${{ matrix.labels }}
    steps:
      - uses: ecmwf-actions/reusable-workflows/build-package-with-config@v2
        with:
          repository: ${{ inputs.mir || 'ecmwf/mir@develop' }}
          build_package_inputs: |
            repository: ${{ inputs.mir || 'ecmwf/mir@develop' }}
          build_config: .github/ci-config.yml
          build_dependencies: |
            ${{ inputs.eccodes }}
            ${{ inputs.eckit }}
            ${{ inputs.atlas }}
